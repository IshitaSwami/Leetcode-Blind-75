class Solution:
    def isValid(self, s: str) -> bool:
        bracket_map = {']':'[',')':'(','}':'{'}
        stack = []
        for char in s:
            if char in bracket_map.values():
                stack.append(char)
            elif stack and stack[-1] == bracket_map[char]:
                stack.pop()
            else:
                return False
        return not stack


The code handles following Test Cases:
1. Valid Test Case= {[]}
2. Invalid Test Case = {](}  or ][ 
3. Edge Case = 1) Stack is empty 
               2) {{{ or ]]] or (((
4. Trick Edge Case = ]{
